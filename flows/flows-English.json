[
    {
        "id": "tab-hn-official",
        "type": "tab",
        "label": "HN Keyword Monitor (Official API)",
        "disabled": false,
        "info": "Poll HN official Firebase v0 API: newstories -> item/<id>.json, filter by keywords, dedupe, JSONL save, expose /hn/latest and /hn/keywords APIs."
    },
    {
        "id": "inj-schedule",
        "type": "inject",
        "z": "tab-hn-official",
        "name": "Trigger (9:30 am every day)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "30 09 * * *",
        "once": true,
        "onceDelay": 0.5,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "http-newstories"
            ]
        ]
    },
    {
        "id": "http-newstories",
        "type": "http request",
        "z": "tab-hn-official",
        "name": "Pull the latest 500 post IDs",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://hacker-news.firebaseio.com/v0/newstories.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "d105059ae294a995"
            ]
        ]
    },
    {
        "id": "d105059ae294a995",
        "type": "split",
        "z": "tab-hn-official",
        "name": "Split into single ID",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "2d3b0fa327708b30"
            ]
        ]
    },
    {
        "id": "2d3b0fa327708b30",
        "type": "delay",
        "z": "tab-hn-official",
        "name": "Limit 5 milliseconds per message",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.005",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": true,
        "outputs": 1,
        "x": 880,
        "y": 140,
        "wires": [
            [
                "8ef631bc2bd2ba0e"
            ]
        ]
    },
    {
        "id": "8ef631bc2bd2ba0e",
        "type": "http request",
        "z": "tab-hn-official",
        "name": "Get the information of post individually",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://hacker-news.firebaseio.com/v0/item/{{{payload}}}.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1190,
        "y": 140,
        "wires": [
            [
                "c6a242953dc04073"
            ]
        ]
    },
    {
        "id": "384ddce7d180cc9e",
        "type": "ui_button",
        "z": "tab-hn-official",
        "name": "",
        "group": "7ba36fb0c99383a6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "search",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "keyword",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "http-newstories",
                "eaa3e74f3a300fef"
            ]
        ]
    },
    {
        "id": "c6a242953dc04073",
        "type": "change",
        "z": "tab-hn-official",
        "name": "Load keywords",
        "rules": [
            {
                "t": "set",
                "p": "keywords",
                "pt": "msg",
                "to": "$string($globalContext(\"keywords\"))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 140,
        "wires": [
            [
                "91ea5b3d634b60cf"
            ]
        ]
    },
    {
        "id": "eaa3e74f3a300fef",
        "type": "function",
        "z": "tab-hn-official",
        "name": "load the key words in global.keyword",
        "func": "const draft = flow.get('keywordDraft');\nif (draft === undefined || draft === null || draft === '') {\n    msg.payload = '（No keywords or it is blank）';\n    return [null, msg];\n}\n\nglobal.set('keyword', draft);\nmsg.payload = `Load into global：${draft}`;\nreturn [msg, null];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "a4462e924dbec234"
            ],
            [
                "a82640aed07ced7e"
            ]
        ]
    },
    {
        "id": "a4462e924dbec234",
        "type": "ui_text",
        "z": "tab-hn-official",
        "group": "7ba36fb0c99383a6",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Result",
        "label": "Result",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 710,
        "y": 320,
        "wires": []
    },
    {
        "id": "a82640aed07ced7e",
        "type": "ui_text",
        "z": "tab-hn-official",
        "group": "7ba36fb0c99383a6",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Reminder",
        "label": "Reminder",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 720,
        "y": 360,
        "wires": []
    },
    {
        "id": "322365878784fcc2",
        "type": "e-mail",
        "z": "tab-hn-official",
        "server": "smtp.gmail.com",
        "port": "587",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": true,
        "name": "daixinyi@global.supcon.com",
        "dname": "Email sender",
        "x": 2250,
        "y": 140,
        "wires": []
    },
    {
        "id": "91ea5b3d634b60cf",
        "type": "function",
        "z": "tab-hn-official",
        "name": "function 3",
        "func": "/******** 关键词（数组或字符串都兼容） ********/\nfunction getKeywords(msg){\n  let kw = msg.keywords ?? msg.keyword ?? global.get('keywords') ?? global.get('keyword') ?? '';\n  if (Array.isArray(kw)) return [...new Set(kw.map(x=>String(x).trim()).filter(Boolean))];\n  if (typeof kw === 'string') {\n    const s = kw.trim();\n    if (!s) return [];\n    if (s.startsWith('[')) { try { kw = JSON.parse(s); } catch { kw = s; } }\n    if (Array.isArray(kw)) return [...new Set(kw.map(x=>String(x).trim()).filter(Boolean))];\n    return [...new Set(s.split(/[\\s,]+/).map(x=>x.trim()).filter(Boolean))];\n  }\n  return [];\n}\n\n/******** 统一/热度/可读时间 ********/\nfunction norm(s){\n  const points   = Number(s.score || 0);\n  const comments = Number(s.descendants || 0);\n  const hot      = points * 0.5 + comments * 0.5;   // 可调\n  const d        = new Date((s.time || 0) * 1000);\n  const time_str = d.toLocaleString(\"zh-CN\", { timeZone: \"Asia/Shanghai\" });\n  return {\n    id: s.id,\n    title: s.title || '(no title)',\n    url: s.url || ('https://news.ycombinator.com/item?id=' + s.id),\n    author: s.by,\n    points, comments,\n    time: s.time || 0,\n    time_str,\n    hot,\n    hot_str: Number.isFinite(hot) ? hot.toFixed(1) : \"0.0\",\n    _title: s.title || '', _text: s.text || '', _url: s.url || ''\n  };\n}\n\n/******** 主体：只放命中的 ********/\nconst kws = getKeywords(msg);\nif (!msg.payload || msg.payload.type !== 'story' || kws.length === 0) return null;\n\n// 可选：仅保留过去24小时\nconst since = Math.floor(Date.now()/1000) - 24*60*60;\nif (!msg.payload.time || msg.payload.time < since) return null;\n\nconst post = norm(msg.payload);\nconst hay = (post._title).toLowerCase();\nconst hits = [];\n\n// 用正则单词边界匹配\nfor (const w of kws){\n  const needle = String(w).trim();\n  if (!needle) continue;\n  try {\n    const regex = new RegExp(`\\\\b${needle}\\\\b`, \"i\"); // \\b 保证是完整单词\n    if (regex.test(hay)) hits.push(w);\n  } catch(e){\n    node.warn(`Invalid regex for keyword: ${needle}`);\n  }\n}\n\nif (hits.length === 0) return null;\n\npost.hitKeywords = hits;\nmsg.payload = post;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 140,
        "wires": [
            [
                "68f2449555881574"
            ]
        ]
    },
    {
        "id": "68f2449555881574",
        "type": "join",
        "z": "tab-hn-official",
        "name": "Integration",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1770,
        "y": 140,
        "wires": [
            [
                "aeca3e1584e28a3c"
            ]
        ]
    },
    {
        "id": "aeca3e1584e28a3c",
        "type": "function",
        "z": "tab-hn-official",
        "name": "function 1",
        "func": "const posts = Array.isArray(msg.payload) ? msg.payload : [];\nconst updatedAt = new Date().toLocaleString(\"zh-CN\", { timeZone: \"Asia/Shanghai\" });\n\n// 分桶（每个关键词一个桶），在“关键词维度”去重（url||id）\nconst buckets = {};                 // { kw: [post,...] }\nconst seenPerKw = {};               // { kw: Set(key) }\nfor (const p of posts) {\n  const hits = Array.isArray(p.hitKeywords) ? p.hitKeywords : [];\n  if (hits.length === 0) continue;\n  const key = p.url || p.id;\n  for (const kw of hits) {\n    if (!buckets[kw]) { buckets[kw] = []; seenPerKw[kw] = new Set(); }\n    if (seenPerKw[kw].has(key)) continue;\n    seenPerKw[kw].add(key);\n    buckets[kw].push(p);\n  }\n}\n\n// 生成 sections（只保留非空分组），每组按热度降序取 Top20\nconst sections = Object.keys(buckets)\n  .map(kw => {\n    const arr = buckets[kw].slice().sort((a,b)=> b.hot - a.hot).slice(0,20);\n    return { keyword: kw, items: arr };\n  })\n  .filter(sec => sec.items.length > 0)\n  .sort((a,b) => b.items.length - a.items.length); // 可改为按组内第一条 hot 排序\n\n// 可选：给 ui_table 的扁平数组\nconst flat = [];\nfor (const sec of sections) for (const it of sec.items) flat.push({ keyword: sec.keyword, ...it });\n\n// 输出给 Template / e-mail\nmsg.sections  = sections;                  // 分组结构（Template 用）\nmsg.payload   = flat;                      // 扁平（若你还要表格）\nmsg.keyword   = sections.map(s=>s.keyword).join(', ');\nmsg.updatedAt = updatedAt;\nmsg.topic     = `HN 过去24小时 Top20（按关键词）| ${updatedAt}`; // e-mail 主题\nmsg.sendable  = sections.length > 0;       // 是否有内容可发\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 140,
        "wires": [
            [
                "46bed450f6a399d4"
            ]
        ]
    },
    {
        "id": "46bed450f6a399d4",
        "type": "template",
        "z": "tab-hn-official",
        "name": "HTML template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h2>HN Top 20 by Keyword (Last 24 Hours)</h2>\n<p>Keywords: {{keyword}} | Last updated: {{updatedAt}}</p>\n\n{{#sections}}\n  <h3 style=\"margin:12px 0 6px\">{{keyword}} ({{items.length}} matches, showing top 20)</h3>\n  <ol style=\"line-height:1.5; margin:0 0 14px 18px;\">\n  {{#items}}\n    <li style=\"margin:6px 0\">\n      <a href=\"{{url}}\" target=\"_blank\">{{title}}</a><br/>\n      🔥 {{hot_str}} · ▲ {{points}} · 💬 {{comments}} · 👤 {{author}} · 🕒 {{time_str}}\n    </li>\n  {{/items}}\n  </ol>\n{{/sections}}\n",
        "output": "str",
        "x": 2080,
        "y": 140,
        "wires": [
            [
                "322365878784fcc2"
            ]
        ]
    },
    {
        "id": "23123bb523495217",
        "type": "ui_text_input",
        "z": "tab-hn-official",
        "name": "Keyword import",
        "label": "Please enter the keywords (separated by English commas)",
        "tooltip": "",
        "group": "7ba36fb0c99383a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "keywordInput",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "35170b608384d11a"
            ]
        ]
    },
    {
        "id": "d89a2799bed04da0",
        "type": "change",
        "z": "tab-hn-official",
        "name": "Cache to flow.keywordDraft",
        "rules": [
            {
                "t": "set",
                "p": "keywordDraft",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 560,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "35170b608384d11a",
        "type": "function",
        "z": "tab-hn-official",
        "name": "function 2",
        "func": "const raw = msg.payload || \"\";\nconst keywords = raw\n    .split(\",\")                 \n    .map(k => k.trim())        \n    .filter(k => k.length > 0); \n\nglobal.set(\"keywords\", keywords);\n\nmsg.keywords = keywords;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "d89a2799bed04da0"
            ]
        ]
    },
    {
        "id": "7ba36fb0c99383a6",
        "type": "ui_group",
        "name": "Search Page",
        "tab": "0c9f966f0eb57d2b",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c9f966f0eb57d2b",
        "type": "ui_tab",
        "name": "MainPage",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8d599ca0c09454ca",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-dashboard": "3.6.6",
            "node-red-node-email": "3.1.0"
        }
    }
]